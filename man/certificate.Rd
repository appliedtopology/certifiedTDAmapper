% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/certificate.R
\name{certificate}
\alias{certificate}
\title{Mapper graph certificates}
\usage{
certificate(mapper, data, graph = NULL, type = c("interleaving",
  "probabilistic"), cl = NULL, N.sim = 100)
}
\arguments{
\item{mapper}{A \code{TDAmapper::mapper1d} output object.}

\item{data}{The underlying data for the Mapper graph.}

\item{graph}{The adjacency matrix \code{igraph::graph} of the Mapper graph.
Will be calculated if missing.}

\item{type}{Which kind(s) of certificate to calculate: interleaving distance or
probabilistic test. Takes a character vector and calculates either
or both depending on the presence or absense of \code{interleaving}
or \code{probabilistic} as strings in the vector.}

\item{cl}{A \code{parallel} cluster object. If present, will use \code{parLapply}
to speed up calculations.}

\item{N.sim}{The number of entries in the simulation testing for the probabilistic
certificate.}
}
\value{
A list with entries depending on the type of certificate chosen:
  If calculating an \code{interleaving} certificate
  \describe{
    \item{\code{interleaving.epsilon}}{The interleaving distance according to the
      persistent interleaving results by Govc and Skraba.}
    \item{\code{persistences}}{The actual persistence values used to calculate
      \code{interleaving.epsilon}}
  }

  If calculating an \code{probabilistic} certificate
  \describe{
    \item{\code{z.scores}}{The Z-scores calculated.}
    \item{\code{p.value}}{The estimated p-value derived.}
  }
}
\description{
Calculates certificates of non-obstruction for \code{TDAmapper::mapper1d} graphs
}
\details{
Based on Vejdemo-Johansson and Leshchenko, this is an implementation of computing
certificates for 1-dimensional mapper graphs. Here, a certificate is a quantification
of the absence or indication of the presence of an obstruction to a nerve lemma for
the graph, which would imply that the graph is close in persistent homology to the
true shape of the point cloud.

This function implements the global method from Vejdemo-Johansson and Leshchenko for
probabilistic certificates.
}
